version: "3.8"

services:
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/radarr:/config
      - ${MEDIA_FOLDER}:/data
    networks:
      - arr-internal
      - reverseproxy-nw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.sleao.dev`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr.middlewares=authelia@file"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/sonarr:/config
      - ${MEDIA_FOLDER}:/data
    networks:
      - arr-internal
      - reverseproxy-nw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.sleao.dev`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr.middlewares=authelia@file"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/prowlarr:/config
    networks:
      - arr-internal
      - reverseproxy-nw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.sleao.dev`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prowlarr.middlewares=authelia@file"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/overseerr:/config
    networks:
      - reverseproxy-nw
      - arr-internal
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.sleao.dev`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.overseerr.middlewares=authelia@file"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/bazarr:/config
      - ${MEDIA_FOLDER}:/data
    networks:
      - arr-internal
      - reverseproxy-nw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.sleao.dev`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bazarr.middlewares=authelia@file"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    
  plex:
    image: linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIG_FOLDER}/plex:/config
      - ${MEDIA_FOLDER}:/data

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_FOLDER}/jellyfin:/config
      - ${CONFIG_FOLDER}/jellyfin/cache:/cache
      - ${MEDIA_FOLDER}:/data
    networks:
      - arr-internal
      - reverseproxy-nw
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.sleao.dev`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.jellyfin.middlewares=authelia@file"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    networks:
      - arr-internal
      - reverseproxy-nw
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${CONFIG_FOLDER}/qbittorrent:/config
      - ${MEDIA_FOLDER}:/data
    ports:
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.sleao.dev`)"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt"
      - "traefik.http.routers.qbittorrent.middlewares=authelia@file"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"

networks:
  arr-internal:
  reverseproxy-nw:
    external: true
